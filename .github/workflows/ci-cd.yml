name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Set up Ruby (for Jekyll)
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    # Step 3: Install Jekyll dependencies and build site
    - name: Install Jekyll dependencies
      run: |
        bundle install
        bundle exec jekyll build

    # Step 4: Set up .NET (for Selenium tests)
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    # Step 5: Restore Selenium test dependencies
    - name: Restore Selenium test dependencies
      run: dotnet restore SeleniumTests/SeleniumTests.csproj

    # Step 6: Run Selenium tests
    - name: Run Selenium Tests
      run: dotnet test SeleniumTests/SeleniumTests.csproj

    # Step 7: Set up Go (for API backend)
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    # Step 8: Build the Go project
    - name: Build Go Project
      run: |
        cd board-games-api
        go mod tidy
        go build -o app .

    # Step 9: Deploy to Railway using its CLI
    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        cd board-games-api
        railway up --ci --service ${{ secrets.RAILWAY_SVC_ID }}

    # Step 10: Deploy to GitHub Pages (for static frontend)
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site
